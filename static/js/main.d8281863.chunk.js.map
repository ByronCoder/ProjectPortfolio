{"version":3,"sources":["mypic.jpeg","components/ProjectsTable.js","components/ContactForm.js","App.js","serviceWorker.js","components/LoadingIndicator.js","index.js"],"names":["module","exports","ProjectsTable","props","state","projectsList","trackPromise","fetch","then","response","json","data","setState","className","scope","this","map","proj","key","id","title","description","href","sourceLink","demoLink","React","Component","ContactForm","handleEmailSubmit","e","preventDefault","a","FormData","target","method","body","ok","alert","emailData","name","onSubmit","noValidate","value","type","placeholder","required","data-validation-required-message","address","phoneNumber","message","rows","App","Navbar","collapseOnSelect","expand","fixed","Brand","icon","faCode","size","color","Toggle","aria-controls","Collapse","Nav","Link","Image","src","logo","alt","rel","faLinkedin","faGithub","Boolean","window","location","hostname","match","LoadingIndicator","usePromiseTracker","promiseInProgress","height","width","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d8281863.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mypic.9c1e251e.jpeg\";","\r\nimport React from 'react';\r\nimport '../../src/App.css';\r\nimport { trackPromise } from 'react-promise-tracker';\r\n\r\nclass ProjectsTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { projectsList: [] };\r\n  }\r\n\r\n  componentDidMount() {\r\n    trackPromise(\r\n      fetch('https://p7zlxmo2qk.execute-api.us-east-1.amazonaws.com/dev/api/Projects')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n          this.setState({projectsList: data})\r\n      }))\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"table-responsive\">\r\n          <table className=\"table table-dark table-portfolio w-auto\">\r\n            <thead>\r\n              <tr>\r\n                  <th scope=\"col\">Project Name</th>\r\n                  <th scope=\"col\">Description</th>\r\n                  <th scope=\"col\">Source</th>\r\n                  <th scope=\"col\">Demo</th>\r\n              </tr>\r\n            </thead>\r\n           <tbody>\r\n              {this.state.projectsList.map((proj) => \r\n                <tr key={proj.id}>\r\n                    <td className=\"cell-left\">{proj.title}</td>\r\n                    <td className=\"cell-left\">{proj.description}</td>\r\n                    <td><a href={proj.sourceLink}>Click Here</a></td>\r\n              <td>{proj.demoLink !== \"N/A\" ? <a href={proj.demoLink}>Click Here</a> : proj.demoLink}</td>\r\n                </tr>\r\n          \r\n              )}\r\n           </tbody>\r\n              \r\n          </table>\r\n        \r\n        </div>\r\n    \r\n    ) \r\n  }\r\n}\r\nexport default ProjectsTable\r\n","import React from 'react';\r\nimport '../../src/App.css';\r\n\r\n\r\nclass ContactForm extends React.Component { \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {emailData: []}\r\n\r\n    }\r\n\r\n     handleEmailSubmit = (e) => {\r\n        e.preventDefault();\r\n        (async () => {\r\n            const data = new FormData(e.target)\r\n\r\n            const response = await fetch('https://localhost:44312/email/send-email', {\r\n                method: 'POST',\r\n                body: data,\r\n            })\r\n\r\n            if(response.ok) {\r\n                alert('Message sent succesfully!')\r\n            }\r\n            else {\r\n                alert(\"Error sending message. Try again later.\")\r\n            }\r\n        })() \r\n \r\n    }\r\n\r\n\r\n\r\n    render() {\r\n      return (\r\n        <div className=\"row\">\r\n                <div className=\"col-lg-8 mx-auto\">\r\n                    <form name=\"sentMessage\" id=\"contactForm\" onSubmit={this.handleEmailSubmit} noValidate=\"novalidate\">\r\n                    <div className=\"control-group\">\r\n                        <div className=\"form-group floating-label-form-group controls mb-0 pb-2\">\r\n                        <label>Name</label>\r\n                        <input className=\"form-control\" id=\"name\" name=\"name\" value={this.state.emailData.name} type=\"text\" placeholder=\"Name\" required=\"required\" data-validation-required-message=\"Please enter your name.\"></input>\r\n                        <p className=\"help-block text-danger\"></p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"control-group\">\r\n                        <div className=\"form-group floating-label-form-group controls mb-0 pb-2\">\r\n                        <label>Email Address</label>\r\n                        <input className=\"form-control\" id=\"address\" name=\"address\" value={this.state.emailData.address} type=\"email\" placeholder=\"Email Address\" required=\"required\" data-validation-required-message=\"Please enter your email address.\"></input>\r\n                        <p className=\"help-block text-danger\"></p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"control-group\">\r\n                        <div className=\"form-group floating-label-form-group controls mb-0 pb-2\">\r\n                        <label>Phone Number</label>\r\n                        <input className=\"form-control\" id=\"phoneNumber\" name=\"phoneNumber\" value={this.state.emailData.phoneNumber} type=\"tel\" placeholder=\"Phone Number\" required=\"required\" data-validation-required-message=\"Please enter your phone number.\"></input>\r\n                        <p className=\"help-block text-danger\"></p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"control-group\">\r\n                        <div className=\"form-group floating-label-form-group controls mb-0 pb-2\">\r\n                        <label>Message</label>\r\n                        <textarea className=\"form-control\" id=\"message\" name=\"message\" value={this.state.emailData.message} rows=\"5\" placeholder=\"Message\" required=\"required\" data-validation-required-message=\"Please enter a message.\"></textarea>\r\n                        <p className=\"help-block text-danger\"></p>\r\n                        </div>\r\n                    </div>\r\n                    <br></br>\r\n                    <div id=\"success\"></div>\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\" className=\"btn btn-primary btn-xl\" id=\"sendMessageButton\">Send</button>\r\n                    </div>\r\n                    </form>\r\n                    </div>\r\n                 </div>\r\n       \r\n     )\r\n  }\r\n}\r\n\r\nexport default ContactForm","import React from 'react';\nimport {Nav, Navbar, Image} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCode } from '@fortawesome/free-solid-svg-icons'\nimport { faLinkedin, faGithub } from '@fortawesome/free-brands-svg-icons'\n\n\nimport './App.css';\nimport logo from './mypic.jpeg';\nimport ProjectsTable from \"./components/ProjectsTable\"\nimport ContactForm from \"./components/ContactForm\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Navbar collapseOnSelect expand=\"lg\" fixed=\"top\">\n          <Navbar.Brand className=\"navbar-brand\" href=\"#home\"><FontAwesomeIcon icon={faCode} size=\"1x\" color=\"white\"/> Byron Blank's Portfolio</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"ml-auto\">\n                <Nav.Link href=\"#portfolio\">Portfolio</Nav.Link>\n                <Nav.Link href=\"#about\">About</Nav.Link>\n                <Nav.Link href=\"#contact\">Contact</Nav.Link>\n            </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n\n          <header className=\"jumbotron text-black text-center\">\n            <h1 className=\"heading-text\">Byron Blank's Portfolio</h1>\n            <Image src={logo} alt=\"\" className=\"portfolio-img rounded-circle\" />\n            <p className=\"jumbotron-subheading font-weight-light mb-0\">Web Developer</p>\n          </header>\n          <section className=\"page-section\" id=\"about\">\n            <h2 className=\"page-section-header\">About</h2>\n            <p className=\"about-text\">Hello, my name is Byron Blank and I am a web developer. You can find the projects in my portfolio below along with links to a demo and the source on GitHub.</p>\n            <div>\n              <a href=\"https://www.linkedin.com/in/byron-blank-aa942015/\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon className=\"social-icon\" icon={faLinkedin} size=\"5x\" color=\"lightblue\"/></a>\n              <a href=\"https://github.com/ByronCoder\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon className=\"social-icon\"icon={faGithub} size=\"5x\" color=\"lightblue\"/></a>\n            </div>\n          </section>\n         \n          <section className=\"page-section\" id=\"portfolio\">\n            <h2 className=\"page-section-header\">Portfolio</h2>\n            <div className=\"portDiv\">\n              <ProjectsTable />\n            </div>\n              \n          </section>\n\n          <section className=\"page-section\" id=\"contact\">\n          <div className=\"container\">\n          <h2 className=\"page-section-header\">Contact Me</h2>\n             <ContactForm />\n          </div>\n          </section>\n\n        <footer className=\"footer text-center text-white\">\n          <div className=\"container\">\n             <small>Copyright &copy; Byron Blank 2019</small>\n          </div>\n        </footer>\n      </div>\n  \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport { usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loader from 'react-loader-spinner'\r\n\r\n\r\nfunction LoadingIndicator() {\r\n  const { promiseInProgress } = usePromiseTracker();\r\n   return (\r\n    promiseInProgress &&\r\n      <div className=\"loading-indicator\">\r\n          <Loader type=\"ThreeDots\" color=\"#2BAD60\" height={100} width={100} />\r\n      </div>\r\n   );\r\n }\r\n\r\n export default LoadingIndicator;","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport LoadingIndicator from './components/LoadingIndicator'\n\nrender(\n    <div>\n      <App />\n      <LoadingIndicator/>\n    </div>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}